---

---

<div class="chat-container">
    <div class="chat-area">
        <div class="messages-container"></div>
        <div class="input-area">
            <textarea
                placeholder="Send a message"
                spellcheck="false"
                autocapitalize="off"
                autocorrect="off"
                autocomplete="on"
                class="chat-input"></textarea>
            <button class="send-button">
                <img src="/message-icon.svg" alt="Send" />
            </button>
        </div>
    </div>
</div>

<script>
    const textarea = document.querySelector<HTMLTextAreaElement>(".chat-input");
    const sendButton =
        document.querySelector<HTMLButtonElement>(".send-button");

    async function sendMessage() {
        const message = textarea?.value.trim();
        if (!message || !textarea) return;
        textarea.value = "";

        const previousResponse = document.querySelector("#ai-response");
        if (previousResponse) {
            previousResponse.textContent = "";
        }

        const messagesContainer = document.querySelector(".messages-container");
        if (messagesContainer) {
            const color = "#727272";
            const messageId = Date.now();
            messagesContainer.innerHTML += `
                <div style="margin-bottom: 1rem;">
                    <div style="color:${color}">You:</div>
                    <div>${message}</div>
                </div>
                <div style="margin-bottom: 1rem;">
                    <div style="color:${color}">AI:</div>
                    <div id="ai-response-${messageId}" class="ai-response"></div>
                </div>
            `;

            const aiResponse = document.querySelector(
                `#ai-response-${messageId}`,
            );
            aiResponse?.classList.add("ai-response");

            const response = await fetch("/api/chat", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "x-user-id": "1",
                    "x-chat-message": message,
                },
            });

            const reader = response.body?.getReader();
            const decoder = new TextDecoder();

            while (reader) {
                try {
                    const { done, value } = await reader.read();
                    if (done) break;
                    const chunk = decoder.decode(value, { stream: true });
                    if (aiResponse) {
                        const chunkSpan = document.createElement('span');
                        chunkSpan.textContent = chunk;
                        chunkSpan.className = 'new-chunk';
                        aiResponse.appendChild(chunkSpan);
                    }
                } catch (error) {
                    console.error("Stream error:", error);
                    break;
                }
            }

            if (!messagesContainer) return;

            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
    }

    textarea?.addEventListener("keydown", (event: KeyboardEvent) => {
        if (event.shiftKey) return;
        if (event.key === "Enter") {
            event.preventDefault();
            sendMessage();
        }
    });

    sendButton?.addEventListener("click", () => sendMessage());
</script>

<style lang="scss">
    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    .chat-container {
        position: absolute;
        top: 3rem;
        bottom: 0;
        left: 0;
        right: 0;
        display: flex;
        flex-direction: column;
        padding: 1rem;
    }

    .chat-area {
        flex: 1;
        display: flex;
        flex-direction: column;
        max-width: 100%;
        margin: 0 auto;
        width: 100%;
        border-radius: 12px;
        position: relative;
        height: 100%;
    }

    .messages-container {
        flex: 1;
        overflow-y: auto;
        padding: 1rem;
        padding-bottom: 80px;
        max-width: 40vw;
        margin: 0;
        margin-left: 50%;
        transform: translateX(-50%);
        position: relative;
    }

    .input-area {
        display: flex;
        gap: 0.5rem;
        padding: 0.5rem;
        background: transparent;
        border-radius: 8px;
        position: absolute;
        max-width: 40vw;
        width: 100%;
        bottom: 1rem;
        left: 50%;
        transform: translateX(-50%);
        backdrop-filter: blur(8px);
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        border: 1px solid #111111;
        user-select: none;

        &:focus-within {
            box-shadow: 0 0 15px rgba(255, 255, 255, 0.041);
            border-color: rgba(255, 255, 255, 0.116);
        }
    }

    .chat-input {
        flex: 1;
        background: transparent;
        border: none;
        color: white;
        font-size: 1rem;
        padding: 0.5rem;
        resize: none;
        height: 2.5vh;
        line-height: 1.5;
        max-height: 120px;
        outline: none;
        font-family: inherit;
        overflow-y: auto;

        &::placeholder {
            color: rgba(255, 255, 255, 0.226);
        }

        &::-webkit-scrollbar {
            width: 8px;
        }

        &::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.2);
            border-radius: 4px;
        }

        &::-webkit-scrollbar-thumb {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 4px;

            &:hover {
                background: rgba(255, 255, 255, 0.3);
            }
        }
    }

    .send-button {
        background: #ffffff;
        border: none;
        border-radius: 5px;
        color: #555;
        cursor: pointer;
        transition: all 0.2s ease;
        width: 2rem;
        height: 2rem;
        margin: 0 5px 0 0;
        display: flex;
        align-items: center;
        justify-content: center;
        align-self: center;

        &:hover {
            background: #b6b6b6;
        }

        img {
            width: 1.2rem;
            height: 1.2rem;
        }
    }

    .ai-response {
        min-width: 20ch;
        line-height: 1.5;
        white-space: pre-wrap;
    }

</style>
